<?xml version="1.0" ?><component abstract="" loc="41:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/AlarmMilli32C.nc" nicename="tos.chips.msp430.timer.AlarmMilli32C" qname="AlarmMilli32C">
      <documentation loc="33:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>
 AlarmMilliC is the alarm for async millisecond alarms

 </short>
        <long>
 AlarmMilliC is the alarm for async millisecond alarms

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
 @see  Please refer to TEP 102 for more information about this component and its
          intended use.
</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="53:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/AlarmMilli32C.nc">
          <from><interface-ref name="Alarm" ref="0x7f0e318f92e0" scoped=""/></from>
          <to><interface-ref name="Alarm" ref="0x7f0e318192a0" scoped=""/></to>
        </wire>
        <wire loc="52:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/AlarmMilli32C.nc">
          <from><interface-ref name="Init" ref="0x7f0e318fd730" scoped=""/></from>
          <to><interface-ref name="Init" ref="0x7f0e318929c0" scoped=""/></to>
        </wire>
        <wire loc="55:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/AlarmMilli32C.nc">
          <from><interface-ref name="AlarmFrom" ref="0x7f0e31812b90" scoped=""/></from>
          <to><interface-ref name="Alarm" ref="0x7f0e31891260" scoped=""/></to>
        </wire>
        <wire loc="56:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/AlarmMilli32C.nc">
          <from><interface-ref name="Counter" ref="0x7f0e31815690" scoped=""/></from>
          <to><interface-ref name="Counter" ref="0x7f0e31885900" scoped=""/></to>
        </wire>
      </wiring>
    <specification><interface loc="44:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/AlarmMilli32C.nc" name="Alarm" provided="1" ref="0x7f0e318f92e0">
      <component-ref nicename="tos.chips.msp430.timer.AlarmMilli32C" qname="AlarmMilli32C"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Alarm" ref="0x7f0e318f92e0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f0e31d92ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0e31bb8240"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x7f0e32ba9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x7f0e318f2b30" scoped=""/>
        <function-ref name="fired" ref="0x7f0e318f8ae0" scoped=""/>
        <function-ref name="startAt" ref="0x7f0e318f24e0" scoped=""/>
        <function-ref name="isRunning" ref="0x7f0e318f2020" scoped=""/>
        <function-ref name="getAlarm" ref="0x7f0e318f0020" scoped=""/>
        <function-ref name="start" ref="0x7f0e318f8110" scoped=""/>
        <function-ref name="stop" ref="0x7f0e318f8620" scoped=""/>
      </interface-functions>
    </interface><interface loc="43:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/AlarmMilli32C.nc" name="Init" provided="1" ref="0x7f0e318fd730">
      <component-ref nicename="tos.chips.msp430.timer.AlarmMilli32C" qname="AlarmMilli32C"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Init" ref="0x7f0e318fd730" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Init" qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x7f0e318fdab0" scoped=""/>
      </interface-functions>
    </interface></specification><referenced><interface loc="73:/home/ezio/tinyos-main-read-only/tos/lib/timer/TransformAlarmC.nc" name="AlarmFrom" provided="0" ref="0x7f0e31812b90">
      <component-ref nicename="tos.lib.timer.TransformAlarmC" qname="AlarmMilli32C.Transform"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="AlarmFrom" ref="0x7f0e31812b90" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f0e31bb8680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0e31bb89f0"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7f0e32ba9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x7f0e3180e4e0" scoped=""/>
        <function-ref name="fired" ref="0x7f0e318104e0" scoped=""/>
        <function-ref name="startAt" ref="0x7f0e31810e60" scoped=""/>
        <function-ref name="isRunning" ref="0x7f0e318109a0" scoped=""/>
        <function-ref name="getAlarm" ref="0x7f0e3180e9a0" scoped=""/>
        <function-ref name="start" ref="0x7f0e318119d0" scoped=""/>
        <function-ref name="stop" ref="0x7f0e31810020" scoped=""/>
      </interface-functions>
    </interface><interface loc="68:/home/ezio/tinyos-main-read-only/tos/lib/timer/TransformAlarmC.nc" name="Counter" provided="0" ref="0x7f0e31815690">
      <component-ref nicename="tos.lib.timer.TransformAlarmC" qname="AlarmMilli32C.Transform"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Counter" ref="0x7f0e31815690" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f0e31d92ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0e31bb8240"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x7f0e32ba9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x7f0e318145b0" scoped=""/>
        <function-ref name="clearOverflow" ref="0x7f0e31812020" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x7f0e31814a70" scoped=""/>
        <function-ref name="overflow" ref="0x7f0e318124e0" scoped=""/>
      </interface-functions>
    </interface><interface loc="43:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/CounterMilli32C.nc" name="Counter" provided="1" ref="0x7f0e31885900">
      <component-ref nicename="tos.chips.msp430.timer.CounterMilli32C" qname="CounterMilli32C"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Counter" ref="0x7f0e31885900" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f0e31d92ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0e31bb8240"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x7f0e32ba9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x7f0e31889780" scoped=""/>
        <function-ref name="clearOverflow" ref="0x7f0e31888150" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x7f0e31889c40" scoped=""/>
        <function-ref name="overflow" ref="0x7f0e31888610" scoped=""/>
      </interface-functions>
    </interface><interface loc="43:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/Alarm32khz16C.nc" name="Init" provided="1" ref="0x7f0e318929c0">
      <component-ref nicename="tos.chips.msp430.timer.Alarm32khz16C" qname="AlarmMilli32C.AlarmFrom"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Init" ref="0x7f0e318929c0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Init" qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x7f0e31892d40" scoped=""/>
      </interface-functions>
    </interface><interface loc="61:/home/ezio/tinyos-main-read-only/tos/lib/timer/TransformAlarmC.nc" name="Alarm" provided="1" ref="0x7f0e318192a0">
      <component-ref nicename="tos.lib.timer.TransformAlarmC" qname="AlarmMilli32C.Transform"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Alarm" ref="0x7f0e318192a0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f0e31d92ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0e31bb8240"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x7f0e32ba9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x7f0e31816b30" scoped=""/>
        <function-ref name="fired" ref="0x7f0e31818aa0" scoped=""/>
        <function-ref name="startAt" ref="0x7f0e318164e0" scoped=""/>
        <function-ref name="isRunning" ref="0x7f0e31816020" scoped=""/>
        <function-ref name="getAlarm" ref="0x7f0e31815020" scoped=""/>
        <function-ref name="start" ref="0x7f0e318180d0" scoped=""/>
        <function-ref name="stop" ref="0x7f0e318185e0" scoped=""/>
      </interface-functions>
    </interface><interface loc="44:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/Alarm32khz16C.nc" name="Alarm" provided="1" ref="0x7f0e31891260">
      <component-ref nicename="tos.chips.msp430.timer.Alarm32khz16C" qname="AlarmMilli32C.AlarmFrom"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Alarm" ref="0x7f0e31891260" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f0e31bb8680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0e31bb89f0"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7f0e32ba9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x7f0e3188eb30" scoped=""/>
        <function-ref name="fired" ref="0x7f0e31890a60" scoped=""/>
        <function-ref name="startAt" ref="0x7f0e3188e4e0" scoped=""/>
        <function-ref name="isRunning" ref="0x7f0e3188e020" scoped=""/>
        <function-ref name="getAlarm" ref="0x7f0e3188d020" scoped=""/>
        <function-ref name="start" ref="0x7f0e31890090" scoped=""/>
        <function-ref name="stop" ref="0x7f0e318905a0" scoped=""/>
      </interface-functions>
    </interface><component abstract="" loc="41(AlarmMilli32C.AlarmFrom):/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/Alarm32khz16C.nc" nicename="tos.chips.msp430.timer.Alarm32khz16C" qname="AlarmMilli32C.AlarmFrom">
      <documentation loc="33:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>
 Alarm32khzC is the alarm for async 32khz alarms

 </short>
        <long>
 Alarm32khzC is the alarm for async 32khz alarms

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
 @see  Please refer to TEP 102 for more information about this component and its
          intended use.
</long>
      </documentation>
      <instance>
        <component-ref nicename="tos.chips.msp430.timer.Alarm32khz16C" qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component><component loc="41:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/CounterMilli32C.nc" nicename="tos.chips.msp430.timer.CounterMilli32C" qname="CounterMilli32C">
      <documentation loc="33:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>
 CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>
 CounterMilli32C provides at 32-bit counter at 1024 ticks per second.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
 @see  Please refer to TEP 102 for more information about this component and its
          intended use.
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="50:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/CounterMilli32C.nc">
          <from><interface-ref name="Counter" ref="0x7f0e31885900" scoped=""/></from>
          <to><interface-ref name="Counter" ref="0x7f0e31867cf0" scoped=""/></to>
        </wire>
        <wire loc="52:/home/ezio/tinyos-main-read-only/tos/chips/msp430/timer/CounterMilli32C.nc">
          <from><interface-ref name="CounterFrom" ref="0x7f0e318490f0" scoped=""/></from>
          <to><interface-ref name="Msp430Counter32khz" ref="0x7f0e31883990" scoped=""/></to>
        </wire>
      </wiring>
    </component><component abstract="" loc="51(AlarmMilli32C.Transform):/home/ezio/tinyos-main-read-only/tos/lib/timer/TransformAlarmC.nc" nicename="tos.lib.timer.TransformAlarmC" qname="AlarmMilli32C.Transform">
      <documentation loc="34:/home/ezio/tinyos-main-read-only/tos/lib/timer/TransformAlarmC.nc">
        <short>
 TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>
 TransformAlarmC decreases precision and/or widens an Alarm.  An already
 widened Counter component is used to help.

 &lt;p&gt;See TEP102 for more details.
 @param to_precision_tag A type indicating the precision of the transformed
   Alarm.
 @param to_size_type The type for the width of the transformed Alarm.
 @param from_precision_tag A type indicating the precision of the original
   Alarm.
 @param from_size_type The type for the width of the original Alarm.
 @param bit_shift_right Original time units will be 2 to the power 
   &lt;code&gt;bit_shift_right&lt;/code&gt; larger than transformed time units.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
</long>
      </documentation>
      <instance>
        <component-ref nicename="tos.lib.timer.TransformAlarmC" qname="TransformAlarmC"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f0e31d92ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0e31bb8240"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x7f0e32ba9920"/></typename>
          </type-int>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f0e31bb8680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0e31bb89f0"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7f0e32ba9520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int alignment="I:2" cname="int" size="I:2"/>
          </value>
        </arguments>
      </instance>
      <module/>
    </component></referenced></component>